openapi: "3.0.0"

info:
  version: "1.0.0"
  title: "profiles"

paths:

  /api/user/register:
    post:
      summary: "Register a new user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        "201":
          description: "New user successfully registered"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        "422":
          description: "Unprocessable Entity. There is a validation failure with some part of the data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'

  /api/user/login:
    post:
      summary: "Login"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          description: "Login successful"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        "401":
          description: "Login not successful"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/user/me:
    get:
      security:
        - bearerAuth: []
      description: "Retrieve the user data for provided token"
      responses:
        "200":
          description: "Retrieved successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: "Not Authentic"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/user/{id}:
    put:
      security:
        - bearerAuth: []
      summary: "Update a user information"
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: "ID of the user to update"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        "202":
          description: "Update successful"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "422":
          description: "Unprocessable Entity. There is a validation failure with some part of the data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'
        "401":
          description: "Not Authentic"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: "Not Authorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:

  securitySchemes:
    bearerAuth:
      description: "Single issue long lived token"
      type: http
      scheme: bearer

  schemas:
    UserRegister:
      description: "New user information"
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    User:
      description: "Existing user information"
      properties:
        id:
          type: string
        name:
          type: string
        surname:
          type: string
        email:
          type: string
      required:
        - id
        - email

    UserUpdate:
      description: "An update to user information"
      properties:
        name:
          type: string
          nullable: true
        surname:
          type: string
          nullable: true
        email:
          type: string
          nullable: false
      required:
        - email


    UserLoginResponse:
      properties:
        token:
          description: "A token for a newly registered login session"
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
        - token
        - user

    LoginRequest:
      properties:
        email:
          type: string
        password:
          type: string

      required:
        - email
        - password

    Error:
      description: "A general error"
      properties:
        message:
          type: string
          nullable: false
      required:
        - message

    ValidationErrors:
      description: "Encapsulates all of the validation errors for a given request"
      properties:
        errors:
          nullable: false
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'

    ValidationError:
      description: "Describes a single validation error"
      properties:
        path:
          description: "The path to the property (allows for nested data). For example ['email']"
          nullable: false
          type: array
          items:
            type: string
        message:
          nullable: false
          description: "A message describing why the property failed validation"
          type: string
